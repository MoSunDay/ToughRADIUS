[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)


[inet_http_server]         ; inet (TCP) server disabled by default
port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)

[supervisord]
logfile=/var/toughradius/log/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)


[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface


[supervisorctl]
;serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket

[program:radiusd]
command=/usr/bin/python radiusd/server.py -c /var/toughradius/radiusd.json
process_name=%(program_name)s
numprocs=1
directory=/opt/toughradius
autostart=true
autorestart=true
user=root
redirect_stderr=true
stdout_logfile=/var/toughradius/log/radiusd.log

[program:rad_console]
command=/usr/bin/python admin.py -c /var/toughradius/radiusd.json
process_name=%(program_name)s
numprocs=1
directory=/opt/toughradius/console
autostart=true
autorestart=true
user=root
redirect_stderr=true
stdout_logfile=/var/toughradius/log/rad_console.log

[program:rad_customer]
command=/usr/bin/python customer.py -c /var/toughradius/radiusd.json
process_name=%(program_name)s
numprocs=1
directory=/opt/toughradius/console
autostart=true
autorestart=true
user=root
redirect_stderr=true
stdout_logfile=/var/toughradius/log/rad_customer.log
